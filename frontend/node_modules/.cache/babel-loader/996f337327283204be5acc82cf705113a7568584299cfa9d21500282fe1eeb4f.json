{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState: {\n    theme: 'light',\n    sidebarOpen: false,\n    modals: {\n      loginModal: false,\n      registerModal: false,\n      reviewModal: false,\n      confirmModal: false\n    },\n    notifications: [],\n    loading: {\n      global: false,\n      movies: false,\n      reviews: false\n    },\n    searchQuery: '',\n    filters: {\n      genre: '',\n      year: '',\n      rating: '',\n      sortBy: 'popularity'\n    }\n  },\n  reducers: {\n    setTheme: (state, action) => {\n      state.theme = action.payload;\n    },\n    toggleSidebar: state => {\n      state.sidebarOpen = !state.sidebarOpen;\n    },\n    setSidebarOpen: (state, action) => {\n      state.sidebarOpen = action.payload;\n    },\n    openModal: (state, action) => {\n      const {\n        modalName\n      } = action.payload;\n      state.modals[modalName] = true;\n    },\n    closeModal: (state, action) => {\n      const {\n        modalName\n      } = action.payload;\n      state.modals[modalName] = false;\n    },\n    closeAllModals: state => {\n      Object.keys(state.modals).forEach(modal => {\n        state.modals[modal] = false;\n      });\n    },\n    addNotification: (state, action) => {\n      const {\n        id,\n        type,\n        message,\n        duration\n      } = action.payload;\n      state.notifications.push({\n        id: id || Date.now(),\n        type: type || 'info',\n        message,\n        duration: duration || 5000,\n        timestamp: Date.now()\n      });\n    },\n    removeNotification: (state, action) => {\n      state.notifications = state.notifications.filter(notification => notification.id !== action.payload);\n    },\n    clearNotifications: state => {\n      state.notifications = [];\n    },\n    setGlobalLoading: (state, action) => {\n      state.loading.global = action.payload;\n    },\n    setComponentLoading: (state, action) => {\n      const {\n        component,\n        loading\n      } = action.payload;\n      state.loading[component] = loading;\n    },\n    setSearchQuery: (state, action) => {\n      state.searchQuery = action.payload;\n    },\n    setFilters: (state, action) => {\n      state.filters = {\n        ...state.filters,\n        ...action.payload\n      };\n    },\n    clearFilters: state => {\n      state.filters = {\n        genre: '',\n        year: '',\n        rating: '',\n        sortBy: 'popularity'\n      };\n    },\n    resetUI: state => {\n      state.sidebarOpen = false;\n      state.modals = {\n        loginModal: false,\n        registerModal: false,\n        reviewModal: false,\n        confirmModal: false\n      };\n      state.notifications = [];\n      state.searchQuery = '';\n    }\n  }\n});\nexport const {\n  setTheme,\n  toggleSidebar,\n  setSidebarOpen,\n  openModal,\n  closeModal,\n  closeAllModals,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  setGlobalLoading,\n  setComponentLoading,\n  setSearchQuery,\n  setFilters,\n  clearFilters,\n  resetUI\n} = uiSlice.actions;\nexport default uiSlice.reducer;","map":{"version":3,"names":["createSlice","uiSlice","name","initialState","theme","sidebarOpen","modals","loginModal","registerModal","reviewModal","confirmModal","notifications","loading","global","movies","reviews","searchQuery","filters","genre","year","rating","sortBy","reducers","setTheme","state","action","payload","toggleSidebar","setSidebarOpen","openModal","modalName","closeModal","closeAllModals","Object","keys","forEach","modal","addNotification","id","type","message","duration","push","Date","now","timestamp","removeNotification","filter","notification","clearNotifications","setGlobalLoading","setComponentLoading","component","setSearchQuery","setFilters","clearFilters","resetUI","actions","reducer"],"sources":["C:/Users/sarra/Desktop/movie-review-platform/frontend/src/store/slices/uiSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState: {\r\n    theme: 'light',\r\n    sidebarOpen: false,\r\n    modals: {\r\n      loginModal: false,\r\n      registerModal: false,\r\n      reviewModal: false,\r\n      confirmModal: false\r\n    },\r\n    notifications: [],\r\n    loading: {\r\n      global: false,\r\n      movies: false,\r\n      reviews: false\r\n    },\r\n    searchQuery: '',\r\n    filters: {\r\n      genre: '',\r\n      year: '',\r\n      rating: '',\r\n      sortBy: 'popularity'\r\n    }\r\n  },\r\n  reducers: {\r\n    setTheme: (state, action) => {\r\n      state.theme = action.payload;\r\n    },\r\n    toggleSidebar: (state) => {\r\n      state.sidebarOpen = !state.sidebarOpen;\r\n    },\r\n    setSidebarOpen: (state, action) => {\r\n      state.sidebarOpen = action.payload;\r\n    },\r\n    openModal: (state, action) => {\r\n      const { modalName } = action.payload;\r\n      state.modals[modalName] = true;\r\n    },\r\n    closeModal: (state, action) => {\r\n      const { modalName } = action.payload;\r\n      state.modals[modalName] = false;\r\n    },\r\n    closeAllModals: (state) => {\r\n      Object.keys(state.modals).forEach(modal => {\r\n        state.modals[modal] = false;\r\n      });\r\n    },\r\n    addNotification: (state, action) => {\r\n      const { id, type, message, duration } = action.payload;\r\n      state.notifications.push({\r\n        id: id || Date.now(),\r\n        type: type || 'info',\r\n        message,\r\n        duration: duration || 5000,\r\n        timestamp: Date.now()\r\n      });\r\n    },\r\n    removeNotification: (state, action) => {\r\n      state.notifications = state.notifications.filter(\r\n        notification => notification.id !== action.payload\r\n      );\r\n    },\r\n    clearNotifications: (state) => {\r\n      state.notifications = [];\r\n    },\r\n    setGlobalLoading: (state, action) => {\r\n      state.loading.global = action.payload;\r\n    },\r\n    setComponentLoading: (state, action) => {\r\n      const { component, loading } = action.payload;\r\n      state.loading[component] = loading;\r\n    },\r\n    setSearchQuery: (state, action) => {\r\n      state.searchQuery = action.payload;\r\n    },\r\n    setFilters: (state, action) => {\r\n      state.filters = { ...state.filters, ...action.payload };\r\n    },\r\n    clearFilters: (state) => {\r\n      state.filters = {\r\n        genre: '',\r\n        year: '',\r\n        rating: '',\r\n        sortBy: 'popularity'\r\n      };\r\n    },\r\n    resetUI: (state) => {\r\n      state.sidebarOpen = false;\r\n      state.modals = {\r\n        loginModal: false,\r\n        registerModal: false,\r\n        reviewModal: false,\r\n        confirmModal: false\r\n      };\r\n      state.notifications = [];\r\n      state.searchQuery = '';\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  setTheme,\r\n  toggleSidebar,\r\n  setSidebarOpen,\r\n  openModal,\r\n  closeModal,\r\n  closeAllModals,\r\n  addNotification,\r\n  removeNotification,\r\n  clearNotifications,\r\n  setGlobalLoading,\r\n  setComponentLoading,\r\n  setSearchQuery,\r\n  setFilters,\r\n  clearFilters,\r\n  resetUI\r\n} = uiSlice.actions;\r\n\r\nexport default uiSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,OAAO,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,IAAI;EACVC,YAAY,EAAE;IACZC,KAAK,EAAE,OAAO;IACdC,WAAW,EAAE,KAAK;IAClBC,MAAM,EAAE;MACNC,UAAU,EAAE,KAAK;MACjBC,aAAa,EAAE,KAAK;MACpBC,WAAW,EAAE,KAAK;MAClBC,YAAY,EAAE;IAChB,CAAC;IACDC,aAAa,EAAE,EAAE;IACjBC,OAAO,EAAE;MACPC,MAAM,EAAE,KAAK;MACbC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;IACX,CAAC;IACDC,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE;MACPC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACpB,KAAK,GAAGqB,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDC,aAAa,EAAGH,KAAK,IAAK;MACxBA,KAAK,CAACnB,WAAW,GAAG,CAACmB,KAAK,CAACnB,WAAW;IACxC,CAAC;IACDuB,cAAc,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACnB,WAAW,GAAGoB,MAAM,CAACC,OAAO;IACpC,CAAC;IACDG,SAAS,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAM;QAAEK;MAAU,CAAC,GAAGL,MAAM,CAACC,OAAO;MACpCF,KAAK,CAAClB,MAAM,CAACwB,SAAS,CAAC,GAAG,IAAI;IAChC,CAAC;IACDC,UAAU,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAM;QAAEK;MAAU,CAAC,GAAGL,MAAM,CAACC,OAAO;MACpCF,KAAK,CAAClB,MAAM,CAACwB,SAAS,CAAC,GAAG,KAAK;IACjC,CAAC;IACDE,cAAc,EAAGR,KAAK,IAAK;MACzBS,MAAM,CAACC,IAAI,CAACV,KAAK,CAAClB,MAAM,CAAC,CAAC6B,OAAO,CAACC,KAAK,IAAI;QACzCZ,KAAK,CAAClB,MAAM,CAAC8B,KAAK,CAAC,GAAG,KAAK;MAC7B,CAAC,CAAC;IACJ,CAAC;IACDC,eAAe,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MAClC,MAAM;QAAEa,EAAE;QAAEC,IAAI;QAAEC,OAAO;QAAEC;MAAS,CAAC,GAAGhB,MAAM,CAACC,OAAO;MACtDF,KAAK,CAACb,aAAa,CAAC+B,IAAI,CAAC;QACvBJ,EAAE,EAAEA,EAAE,IAAIK,IAAI,CAACC,GAAG,CAAC,CAAC;QACpBL,IAAI,EAAEA,IAAI,IAAI,MAAM;QACpBC,OAAO;QACPC,QAAQ,EAAEA,QAAQ,IAAI,IAAI;QAC1BI,SAAS,EAAEF,IAAI,CAACC,GAAG,CAAC;MACtB,CAAC,CAAC;IACJ,CAAC;IACDE,kBAAkB,EAAEA,CAACtB,KAAK,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACb,aAAa,GAAGa,KAAK,CAACb,aAAa,CAACoC,MAAM,CAC9CC,YAAY,IAAIA,YAAY,CAACV,EAAE,KAAKb,MAAM,CAACC,OAC7C,CAAC;IACH,CAAC;IACDuB,kBAAkB,EAAGzB,KAAK,IAAK;MAC7BA,KAAK,CAACb,aAAa,GAAG,EAAE;IAC1B,CAAC;IACDuC,gBAAgB,EAAEA,CAAC1B,KAAK,EAAEC,MAAM,KAAK;MACnCD,KAAK,CAACZ,OAAO,CAACC,MAAM,GAAGY,MAAM,CAACC,OAAO;IACvC,CAAC;IACDyB,mBAAmB,EAAEA,CAAC3B,KAAK,EAAEC,MAAM,KAAK;MACtC,MAAM;QAAE2B,SAAS;QAAExC;MAAQ,CAAC,GAAGa,MAAM,CAACC,OAAO;MAC7CF,KAAK,CAACZ,OAAO,CAACwC,SAAS,CAAC,GAAGxC,OAAO;IACpC,CAAC;IACDyC,cAAc,EAAEA,CAAC7B,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACR,WAAW,GAAGS,MAAM,CAACC,OAAO;IACpC,CAAC;IACD4B,UAAU,EAAEA,CAAC9B,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACP,OAAO,GAAG;QAAE,GAAGO,KAAK,CAACP,OAAO;QAAE,GAAGQ,MAAM,CAACC;MAAQ,CAAC;IACzD,CAAC;IACD6B,YAAY,EAAG/B,KAAK,IAAK;MACvBA,KAAK,CAACP,OAAO,GAAG;QACdC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACDmC,OAAO,EAAGhC,KAAK,IAAK;MAClBA,KAAK,CAACnB,WAAW,GAAG,KAAK;MACzBmB,KAAK,CAAClB,MAAM,GAAG;QACbC,UAAU,EAAE,KAAK;QACjBC,aAAa,EAAE,KAAK;QACpBC,WAAW,EAAE,KAAK;QAClBC,YAAY,EAAE;MAChB,CAAC;MACDc,KAAK,CAACb,aAAa,GAAG,EAAE;MACxBa,KAAK,CAACR,WAAW,GAAG,EAAE;IACxB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXO,QAAQ;EACRI,aAAa;EACbC,cAAc;EACdC,SAAS;EACTE,UAAU;EACVC,cAAc;EACdK,eAAe;EACfS,kBAAkB;EAClBG,kBAAkB;EAClBC,gBAAgB;EAChBC,mBAAmB;EACnBE,cAAc;EACdC,UAAU;EACVC,YAAY;EACZC;AACF,CAAC,GAAGvD,OAAO,CAACwD,OAAO;AAEnB,eAAexD,OAAO,CAACyD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}