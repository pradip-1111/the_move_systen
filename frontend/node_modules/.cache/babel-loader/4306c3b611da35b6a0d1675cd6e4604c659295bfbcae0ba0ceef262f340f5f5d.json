{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { moviesAPI } from '../../services/api';\n\n// Async thunks\nexport const fetchMovies = createAsyncThunk('movies/fetchMovies', async (params, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await moviesAPI.getMovies(params);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  }\n});","map":{"version":3,"names":["createSlice","createAsyncThunk","moviesAPI","fetchMovies","params","rejectWithValue","response","getMovies","data","error","_error$response","message"],"sources":["C:/Users/sarra/Desktop/movie-review-platform/frontend/src/store/slices/movieSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { moviesAPI } from '../../services/api';\r\n\r\n// Async thunks\r\nexport const fetchMovies = createAsyncThunk(\r\n  'movies/fetchMovies',\r\n  async (params, { rejectWithValue }) => {\r\n    try {\r\n      const response = await moviesAPI.getMovies(params);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data || error.message);\r\n    }\r\n  }\r\n);\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,SAAS,QAAQ,oBAAoB;;AAE9C;AACA,OAAO,MAAMC,WAAW,GAAGF,gBAAgB,CACzC,oBAAoB,EACpB,OAAOG,MAAM,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAACK,SAAS,CAACH,MAAM,CAAC;IAClD,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd,OAAOL,eAAe,CAAC,EAAAK,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;EAC/D;AACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}