{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || '/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  logout: () => api.post('/auth/logout'),\n  getProfile: () => api.get('/auth/me'),\n  updateProfile: profileData => api.put('/auth/profile', profileData),\n  changePassword: passwordData => api.put('/auth/change-password', passwordData),\n  verifyToken: () => api.get('/auth/verify')\n};\n\n// Movies API\nexport const moviesAPI = {\n  getMovies: params => api.get('/movies', {\n    params\n  }),\n  getFeatured: () => api.get('/movies/featured'),\n  getSuggestions: params => api.get('/movies/suggestions', {\n    params\n  }),\n  getMovie: id => api.get(`/movies/${id}`),\n  searchMovies: (query, filters) => api.get('/movies', {\n    params: {\n      search: query,\n      ...filters\n    }\n  }),\n  getGenres: () => api.get('/movies/data/genres'),\n  // Admin endpoints\n  addMovie: movieData => api.post('/movies', movieData),\n  updateMovie: (id, movieData) => api.put(`/movies/${id}`, movieData),\n  deleteMovie: id => api.delete(`/movies/${id}`)\n};\n\n// Reviews API\nexport const reviewsAPI = {\n  getMovieReviews: (movieId, params) => api.get(`/reviews/movie/${movieId}`, {\n    params\n  }),\n  submitReview: (movieId, reviewData) => api.post(`/reviews/movie/${movieId}`, reviewData),\n  updateReview: (reviewId, reviewData) => api.put(`/reviews/${reviewId}`, reviewData),\n  deleteReview: reviewId => api.delete(`/reviews/${reviewId}`),\n  markHelpful: reviewId => api.post(`/reviews/${reviewId}/helpful`),\n  markNotHelpful: reviewId => api.post(`/reviews/${reviewId}/not-helpful`),\n  flagReview: (reviewId, reason) => api.post(`/reviews/${reviewId}/flag`, {\n    reason\n  }),\n  getReviewStats: () => api.get('/reviews/stats')\n};\n\n// Users API\nexport const usersAPI = {\n  getUser: userId => api.get(`/users/${userId}`),\n  updateUser: (userId, userData) => api.put(`/users/${userId}`, userData),\n  deleteUser: userId => api.delete(`/users/${userId}`),\n  getUserReviews: (userId, params) => api.get(`/users/${userId}/reviews`, {\n    params\n  }),\n  getUserStats: userId => api.get(`/users/${userId}/stats`),\n  followUser: userId => api.post(`/users/${userId}/follow`),\n  unfollowUser: userId => api.delete(`/users/${userId}/follow`)\n};\n\n// Watchlist API\nexport const watchlistAPI = {\n  getWatchlist: userId => api.get(`/watchlist/${userId}`),\n  addToWatchlist: (userId, movieId) => api.post(`/watchlist/${userId}`, {\n    movieId\n  }),\n  removeFromWatchlist: (userId, movieId) => api.delete(`/watchlist/${userId}/${movieId}`),\n  clearWatchlist: userId => api.delete(`/watchlist/${userId}`)\n};\n\n// Export the api instance for components that need direct access\nexport { api };\n\n// Default export\nexport default {\n  authAPI,\n  moviesAPI,\n  reviewsAPI,\n  usersAPI,\n  watchlistAPI,\n  api\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","logout","getProfile","get","updateProfile","profileData","put","changePassword","passwordData","verifyToken","moviesAPI","getMovies","params","getFeatured","getSuggestions","getMovie","id","searchMovies","query","filters","search","getGenres","addMovie","movieData","updateMovie","deleteMovie","delete","reviewsAPI","getMovieReviews","movieId","submitReview","reviewData","updateReview","reviewId","deleteReview","markHelpful","markNotHelpful","flagReview","reason","getReviewStats","usersAPI","getUser","userId","updateUser","deleteUser","getUserReviews","getUserStats","followUser","unfollowUser","watchlistAPI","getWatchlist","addToWatchlist","removeFromWatchlist","clearWatchlist"],"sources":["C:/Users/sarra/Desktop/movie-review-platform/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with base configuration\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || '/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  logout: () => api.post('/auth/logout'),\r\n  getProfile: () => api.get('/auth/me'),\r\n  updateProfile: (profileData) => api.put('/auth/profile', profileData),\r\n  changePassword: (passwordData) => api.put('/auth/change-password', passwordData),\r\n  verifyToken: () => api.get('/auth/verify'),\r\n};\r\n\r\n// Movies API\r\nexport const moviesAPI = {\r\n  getMovies: (params) => api.get('/movies', { params }),\r\n  getFeatured: () => api.get('/movies/featured'),\r\n  getSuggestions: (params) => api.get('/movies/suggestions', { params }),\r\n  getMovie: (id) => api.get(`/movies/${id}`),\r\n  searchMovies: (query, filters) => api.get('/movies', { params: { search: query, ...filters } }),\r\n  getGenres: () => api.get('/movies/data/genres'),\r\n  // Admin endpoints\r\n  addMovie: (movieData) => api.post('/movies', movieData),\r\n  updateMovie: (id, movieData) => api.put(`/movies/${id}`, movieData),\r\n  deleteMovie: (id) => api.delete(`/movies/${id}`),\r\n};\r\n\r\n// Reviews API\r\nexport const reviewsAPI = {\r\n  getMovieReviews: (movieId, params) => api.get(`/reviews/movie/${movieId}`, { params }),\r\n  submitReview: (movieId, reviewData) => api.post(`/reviews/movie/${movieId}`, reviewData),\r\n  updateReview: (reviewId, reviewData) => api.put(`/reviews/${reviewId}`, reviewData),\r\n  deleteReview: (reviewId) => api.delete(`/reviews/${reviewId}`),\r\n  markHelpful: (reviewId) => api.post(`/reviews/${reviewId}/helpful`),\r\n  markNotHelpful: (reviewId) => api.post(`/reviews/${reviewId}/not-helpful`),\r\n  flagReview: (reviewId, reason) => api.post(`/reviews/${reviewId}/flag`, { reason }),\r\n  getReviewStats: () => api.get('/reviews/stats'),\r\n};\r\n\r\n// Users API\r\nexport const usersAPI = {\r\n  getUser: (userId) => api.get(`/users/${userId}`),\r\n  updateUser: (userId, userData) => api.put(`/users/${userId}`, userData),\r\n  deleteUser: (userId) => api.delete(`/users/${userId}`),\r\n  getUserReviews: (userId, params) => api.get(`/users/${userId}/reviews`, { params }),\r\n  getUserStats: (userId) => api.get(`/users/${userId}/stats`),\r\n  followUser: (userId) => api.post(`/users/${userId}/follow`),\r\n  unfollowUser: (userId) => api.delete(`/users/${userId}/follow`),\r\n};\r\n\r\n// Watchlist API\r\nexport const watchlistAPI = {\r\n  getWatchlist: (userId) => api.get(`/watchlist/${userId}`),\r\n  addToWatchlist: (userId, movieId) => api.post(`/watchlist/${userId}`, { movieId }),\r\n  removeFromWatchlist: (userId, movieId) => api.delete(`/watchlist/${userId}/${movieId}`),\r\n  clearWatchlist: (userId) => api.delete(`/watchlist/${userId}`),\r\n};\r\n\r\n// Export the api instance for components that need direct access\r\nexport { api };\r\n\r\n// Default export\r\nexport default {\r\n  authAPI,\r\n  moviesAPI,\r\n  reviewsAPI,\r\n  usersAPI,\r\n  watchlistAPI,\r\n  api\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}