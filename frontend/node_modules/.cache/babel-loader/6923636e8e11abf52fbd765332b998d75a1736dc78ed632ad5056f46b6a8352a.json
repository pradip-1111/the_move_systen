{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers } from '@reduxjs/toolkit';\n\n// Import reducers\nimport authReducer from './slices/authSlice';\nimport movieReducer from './slices/movieSlice';\nimport reviewReducer from './slices/reviewSlice';\nimport watchlistReducer from './slices/watchlistSlice';\nimport uiReducer from './slices/uiSlice';\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  movies: movieReducer,\n  reviews: reviewReducer,\n  watchlist: watchlistReducer,\n  ui: uiReducer\n});\nconst persistConfig = {\n  key: 'movie-review-platform',\n  version: 1,\n  storage,\n  whitelist: ['auth'] // Only persist auth state\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  }),\n  devTools: process.env.NODE_ENV !== 'production'\n});\nexport const persistor = persistStore(store);\n\n// For JavaScript usage - these would be types in TypeScript\nexport default store;","map":{"version":3,"names":["configureStore","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","combineReducers","authReducer","movieReducer","reviewReducer","watchlistReducer","uiReducer","rootReducer","auth","movies","reviews","watchlist","ui","persistConfig","key","version","whitelist","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","devTools","process","env","NODE_ENV","persistor"],"sources":["C:/Users/sarra/Desktop/movie-review-platform/frontend/src/store/index.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { combineReducers } from '@reduxjs/toolkit';\r\n\r\n// Import reducers\r\nimport authReducer from './slices/authSlice';\r\nimport movieReducer from './slices/movieSlice';\r\nimport reviewReducer from './slices/reviewSlice';\r\nimport watchlistReducer from './slices/watchlistSlice';\r\nimport uiReducer from './slices/uiSlice';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  movies: movieReducer,\r\n  reviews: reviewReducer,\r\n  watchlist: watchlistReducer,\r\n  ui: uiReducer\r\n});\r\n\r\nconst persistConfig = {\r\n  key: 'movie-review-platform',\r\n  version: 1,\r\n  storage,\r\n  whitelist: ['auth'] // Only persist auth state\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// For JavaScript usage - these would be types in TypeScript\r\nexport default store;"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,EAAEC,cAAc,EAAEC,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AAC/G,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,eAAe,QAAQ,kBAAkB;;AAElD;AACA,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,gBAAgB,MAAM,yBAAyB;AACtD,OAAOC,SAAS,MAAM,kBAAkB;AAExC,MAAMC,WAAW,GAAGN,eAAe,CAAC;EAClCO,IAAI,EAAEN,WAAW;EACjBO,MAAM,EAAEN,YAAY;EACpBO,OAAO,EAAEN,aAAa;EACtBO,SAAS,EAAEN,gBAAgB;EAC3BO,EAAE,EAAEN;AACN,CAAC,CAAC;AAEF,MAAMO,aAAa,GAAG;EACpBC,GAAG,EAAE,uBAAuB;EAC5BC,OAAO,EAAE,CAAC;EACVf,OAAO;EACPgB,SAAS,EAAE,CAAC,MAAM,CAAC,CAAC;AACtB,CAAC;AAED,MAAMC,gBAAgB,GAAGxB,cAAc,CAACoB,aAAa,EAAEN,WAAW,CAAC;AAEnE,OAAO,MAAMW,KAAK,GAAG3B,cAAc,CAAC;EAClC4B,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAC7B,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC,CAAC;EACJyB,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK;AACrC,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAGpC,YAAY,CAAC0B,KAAK,CAAC;;AAE5C;AACA,eAAeA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}