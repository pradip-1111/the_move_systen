{"ast":null,"code":"import React from'react';import{useSelector}from'react-redux';import{Navigate,useLocation}from'react-router-dom';import LoadingSpinner from'../ui/LoadingSpinner';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,requireAuth=true}=_ref;const{isAuthenticated,loading}=useSelector(state=>state.auth);const location=useLocation();// Show loading spinner while checking authentication\nif(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center min-h-screen\",children:/*#__PURE__*/_jsx(LoadingSpinner,{})});}// If authentication is required but user is not authenticated\nif(requireAuth&&!isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",state:{from:location},replace:true});}// If user is authenticated but trying to access auth pages\nif(!requireAuth&&isAuthenticated){var _location$state,_location$state$from;const from=((_location$state=location.state)===null||_location$state===void 0?void 0:(_location$state$from=_location$state.from)===null||_location$state$from===void 0?void 0:_location$state$from.pathname)||'/';return/*#__PURE__*/_jsx(Navigate,{to:from,replace:true});}return children;};export default ProtectedRoute;","map":{"version":3,"names":["React","useSelector","Navigate","useLocation","LoadingSpinner","jsx","_jsx","ProtectedRoute","_ref","children","requireAuth","isAuthenticated","loading","state","auth","location","className","to","from","replace","_location$state","_location$state$from","pathname"],"sources":["C:/Users/sarra/OneDrive - Amrita Vishwa Vidyapeetham- Chennai Campus/Desktop/movieHub2/frontend/src/components/auth/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport LoadingSpinner from '../ui/LoadingSpinner';\r\n\r\nconst ProtectedRoute = ({ children, requireAuth = true }) => {\r\n  const { isAuthenticated, loading } = useSelector(state => state.auth);\r\n  const location = useLocation();\r\n\r\n  // Show loading spinner while checking authentication\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-screen\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If authentication is required but user is not authenticated\r\n  if (requireAuth && !isAuthenticated) {\r\n    return (\r\n      <Navigate \r\n        to=\"/login\" \r\n        state={{ from: location }}\r\n        replace \r\n      />\r\n    );\r\n  }\r\n\r\n  // If user is authenticated but trying to access auth pages\r\n  if (!requireAuth && isAuthenticated) {\r\n    const from = location.state?.from?.pathname || '/';\r\n    return <Navigate to={from} replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,MAAO,CAAAC,cAAc,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAsC,IAArC,CAAEC,QAAQ,CAAEC,WAAW,CAAG,IAAK,CAAC,CAAAF,IAAA,CACtD,KAAM,CAAEG,eAAe,CAAEC,OAAQ,CAAC,CAAGX,WAAW,CAACY,KAAK,EAAIA,KAAK,CAACC,IAAI,CAAC,CACrE,KAAM,CAAAC,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAE9B;AACA,GAAIS,OAAO,CAAE,CACX,mBACEN,IAAA,QAAKU,SAAS,CAAC,+CAA+C,CAAAP,QAAA,cAC5DH,IAAA,CAACF,cAAc,GAAE,CAAC,CACf,CAAC,CAEV,CAEA;AACA,GAAIM,WAAW,EAAI,CAACC,eAAe,CAAE,CACnC,mBACEL,IAAA,CAACJ,QAAQ,EACPe,EAAE,CAAC,QAAQ,CACXJ,KAAK,CAAE,CAAEK,IAAI,CAAEH,QAAS,CAAE,CAC1BI,OAAO,MACR,CAAC,CAEN,CAEA;AACA,GAAI,CAACT,WAAW,EAAIC,eAAe,CAAE,KAAAS,eAAA,CAAAC,oBAAA,CACnC,KAAM,CAAAH,IAAI,CAAG,EAAAE,eAAA,CAAAL,QAAQ,CAACF,KAAK,UAAAO,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBF,IAAI,UAAAG,oBAAA,iBAApBA,oBAAA,CAAsBC,QAAQ,GAAI,GAAG,CAClD,mBAAOhB,IAAA,CAACJ,QAAQ,EAACe,EAAE,CAAEC,IAAK,CAACC,OAAO,MAAE,CAAC,CACvC,CAEA,MAAO,CAAAV,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}