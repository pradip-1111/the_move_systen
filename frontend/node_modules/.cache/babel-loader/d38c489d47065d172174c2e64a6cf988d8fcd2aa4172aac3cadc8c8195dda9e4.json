{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarra\\\\Desktop\\\\movie-review-platform\\\\frontend\\\\src\\\\components\\\\auth\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport LoadingSpinner from '../ui/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requireAuth = true\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    loading\n  } = useSelector(state => state.auth);\n  const location = useLocation();\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If authentication is required but user is not authenticated\n  if (requireAuth && !isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If user is authenticated but trying to access auth pages\n  if (!requireAuth && isAuthenticated) {\n    var _location$state, _location$state$from;\n    const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || '/';\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: from,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"fOayQyXlEEr8ek2aWeMP53aUQPs=\", false, function () {\n  return [useSelector, useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useSelector","Navigate","useLocation","LoadingSpinner","jsxDEV","_jsxDEV","ProtectedRoute","children","requireAuth","_s","isAuthenticated","loading","state","auth","location","className","fileName","_jsxFileName","lineNumber","columnNumber","to","from","replace","_location$state","_location$state$from","pathname","_c","$RefreshReg$"],"sources":["C:/Users/sarra/Desktop/movie-review-platform/frontend/src/components/auth/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport LoadingSpinner from '../ui/LoadingSpinner';\r\n\r\nconst ProtectedRoute = ({ children, requireAuth = true }) => {\r\n  const { isAuthenticated, loading } = useSelector(state => state.auth);\r\n  const location = useLocation();\r\n\r\n  // Show loading spinner while checking authentication\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-screen\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If authentication is required but user is not authenticated\r\n  if (requireAuth && !isAuthenticated) {\r\n    return (\r\n      <Navigate \r\n        to=\"/login\" \r\n        state={{ from: location }}\r\n        replace \r\n      />\r\n    );\r\n  }\r\n\r\n  // If user is authenticated but trying to access auth pages\r\n  if (!requireAuth && isAuthenticated) {\r\n    const from = location.state?.from?.pathname || '/';\r\n    return <Navigate to={from} replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,OAAOC,cAAc,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,WAAW,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAM;IAAEC,eAAe;IAAEC;EAAQ,CAAC,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EACrE,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAIS,OAAO,EAAE;IACX,oBACEN,OAAA;MAAKU,SAAS,EAAC,+CAA+C;MAAAR,QAAA,eAC5DF,OAAA,CAACF,cAAc;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAEV;;EAEA;EACA,IAAIX,WAAW,IAAI,CAACE,eAAe,EAAE;IACnC,oBACEL,OAAA,CAACJ,QAAQ;MACPmB,EAAE,EAAC,QAAQ;MACXR,KAAK,EAAE;QAAES,IAAI,EAAEP;MAAS,CAAE;MAC1BQ,OAAO;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAEN;;EAEA;EACA,IAAI,CAACX,WAAW,IAAIE,eAAe,EAAE;IAAA,IAAAa,eAAA,EAAAC,oBAAA;IACnC,MAAMH,IAAI,GAAG,EAAAE,eAAA,GAAAT,QAAQ,CAACF,KAAK,cAAAW,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBC,QAAQ,KAAI,GAAG;IAClD,oBAAOpB,OAAA,CAACJ,QAAQ;MAACmB,EAAE,EAAEC,IAAK;MAACC,OAAO;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACvC;EAEA,OAAOZ,QAAQ;AACjB,CAAC;AAACE,EAAA,CA/BIH,cAAc;EAAA,QACmBN,WAAW,EAC/BE,WAAW;AAAA;AAAAwB,EAAA,GAFxBpB,cAAc;AAiCpB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}